name: Seed good first issues

on:
  workflow_dispatch: {}

permissions:
  contents: read
  issues: write

jobs:
  seed:
    runs-on: ubuntu-latest
    steps:
      - name: Generate issue list
        id: gen
        run: |
          cat > issues.json << 'JSON'
          [
            {
              "title": "Add demo GIF to README (docs/demo.gif)",
              "body": "Create and add a short demo GIF that showcases gesture control. Place at docs/demo.gif and ensure it renders in README.",
              "labels": ["good first issue", "documentation"]
            },
            {
              "title": "Improve error handling for missing mp3 file",
              "body": "Detect when the configured MP3 file is missing and show a friendly error with instructions.",
              "labels": ["good first issue", "enhancement"]
            },
            {
              "title": "Config option: volume and music file via CLI args",
              "body": "Parse command-line arguments for --source, --music, --volume to improve usability.",
              "labels": ["good first issue", "enhancement"]
            },
            {
              "title": "Add pre-commit badge and instructions to CONTRIBUTING.md",
              "body": "Document how to install and run pre-commit hooks (pre-commit install).",
              "labels": ["good first issue", "documentation"]
            }
          ]
          JSON
      - name: Seed issues if missing
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          existing_titles=$(gh issue list --repo "$REPO" --limit 200 --search "label:'good first issue'" --json title -q '.[].title' || true)
          created=0
          for row in $(jq -c '.[]' issues.json); do
            title=$(echo "$row" | jq -r '.title')
            if echo "$existing_titles" | grep -Fxq "$title"; then
              echo "Skipping existing issue: $title"
            else
              body=$(echo "$row" | jq -r '.body')
              labels=$(echo "$row" | jq -r '.labels | join(",")')
              gh issue create --repo "$REPO" --title "$title" --body "$body" --label "$labels"
              created=$((created+1))
            fi
          done
          echo "Created $created issues."
